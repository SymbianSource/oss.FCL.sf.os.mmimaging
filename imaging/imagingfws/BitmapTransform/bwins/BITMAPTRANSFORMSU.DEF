EXPORTS
	??1CBitmapRotator@@UAE@XZ @ 1 NONAME ; public: virtual __thiscall CBitmapRotator::~CBitmapRotator(void)
	??1CBitmapScaler@@UAE@XZ @ 2 NONAME ; public: virtual __thiscall CBitmapScaler::~CBitmapScaler(void)
	?NewL@CBitmapRotator@@SAPAV1@XZ @ 3 NONAME ; public: static class CBitmapRotator * __cdecl CBitmapRotator::NewL(void)
	?NewL@CBitmapScaler@@SAPAV1@XZ @ 4 NONAME ; public: static class CBitmapScaler * __cdecl CBitmapScaler::NewL(void)
	?Rotate@CBitmapRotator@@QAEXPAVTRequestStatus@@AAVCFbsBitmap@@1W4TRotationAngle@1@@Z @ 5 NONAME ; public: void __thiscall CBitmapRotator::Rotate(class TRequestStatus *,class CFbsBitmap &,class CFbsBitmap &,enum CBitmapRotator::TRotationAngle)
	?Rotate@CBitmapRotator@@QAEXPAVTRequestStatus@@AAVCFbsBitmap@@W4TRotationAngle@1@@Z @ 6 NONAME ; public: void __thiscall CBitmapRotator::Rotate(class TRequestStatus *,class CFbsBitmap &,enum CBitmapRotator::TRotationAngle)
	?Scale@CBitmapScaler@@QAEXPAVTRequestStatus@@AAVCFbsBitmap@@1H@Z @ 7 NONAME ; public: void __thiscall CBitmapScaler::Scale(class TRequestStatus *,class CFbsBitmap &,class CFbsBitmap &,int)
	?Scale@CBitmapScaler@@QAEXPAVTRequestStatus@@AAVCFbsBitmap@@ABVTSize@@H@Z @ 8 NONAME ; public: void __thiscall CBitmapScaler::Scale(class TRequestStatus *,class CFbsBitmap &,class TSize const &,int)
	?Cancel@CBitmapRotator@@QAEXXZ @ 9 NONAME ; public: void __thiscall CBitmapRotator::Cancel(void)
	?Cancel@CBitmapScaler@@QAEXXZ @ 10 NONAME ; public: void __thiscall CBitmapScaler::Cancel(void)
	??1CBitmapConverter@@UAE@XZ @ 11 NONAME ; public: virtual __thiscall CBitmapConverter::~CBitmapConverter(void)
	?Cancel@CBitmapConverter@@QAEXXZ @ 12 NONAME ; public: void __thiscall CBitmapConverter::Cancel(void)
	?Convert@CBitmapConverter@@QAEXPAVTRequestStatus@@AAVCFbsBitmap@@1@Z @ 13 NONAME ; public: void __thiscall CBitmapConverter::Convert(class TRequestStatus *,class CFbsBitmap &,class CFbsBitmap &)
	?CustomCommand@CBitmapScaler@@QAEHVTUid@@PAX@Z @ 14 NONAME ; public: int __thiscall CBitmapScaler::CustomCommand(class TUid,void *)
	?NewL@CBitmapConverter@@SAPAV1@XZ @ 15 NONAME ; public: static class CBitmapConverter * __cdecl CBitmapConverter::NewL(void)
	?CustomCommand@CBitmapRotator@@QAEHVTUid@@PAX@Z @ 16 NONAME ; int CBitmapRotator::CustomCommand(class TUid, void *)
