[Directory]
input = \icl\TestImages\
output = \icl\OutputImages\
reference = \icl\RefImages\

//read, decode and verify JPEG
[0001-CP]
file = jfif444.jpg
codec = JPEG

//read, decode and verify GIF
[0002-CP]
file = trans_1.gif 
codec = GIF

//read, decode and verify BMP
[0003-CP]
file = bmp8bpp_8.bmp
//decode = 1
codec = BMP

//read, decode and verify MBM
[0004-CP]
file = mbm24bpp_4.mbm
codec = MBM

//read, decode and verify OTA
[0005-CP]
file = operator.ota
codec = OTA

//read, decode and verify WBMP
[0006-CP]
file = sun.wbmp
//decode = 1
codec = WBMP

//read, decode and verify PNG
[0007-CP]
file = png4_8.png
codec = PNG

//read, decode and verify TIFF/Fax
[0008-CP]
file = tif3_4.tif
codec = TIFF

//read, decode and verify WMF
[0009-CP]
file = wmf3_8.wmf
codec = WMF

//read, decode and verify ICO
[0010-CP]
file = icoepoc.ico
codec = ICO

//------------
//encode and verify JPEG
[0011-CP]
file = jfif444_8.mbm
codec = JPEG
QualityFactor =  50 //0..100

//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444

Sampling =  3


//encode and verify GIF
[0012-CP]
file = trans_8.mbm
//decode = 0
codec = GIF
source = bitmat


//encode and verify BMP
[0013-CP]
file = bmp8bpp_8.mbm
//decode = 0
codec = BMP
//source = bitmat


//encode and verify MBM
[0014-CP]
file = mbm24bpp_4.mbm
codec = MBM
//source = bitmat
//---------mbm-
//1  EGray2
//2  EGray4
//3  EGray16
//4  Gray256
//5  EColor16
//6  EColor256
//7  EColor64K
//8  EColor16M

displaymode = 8

//-----------------------
//encode an image from memory to a file
[0015-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444

Sampling =  3


//read, try to decode corrupted WMF 
[0020-CP]
file = wmf3_9.wmf
codec = WMF


//encode an image from memory to a file using all default params
[0200-CP]
file = minimum.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444

Sampling =  3


//read and decode an image from a descriptor
[0016-CP]
file = jfif444.jpg
codec = JPEG

//read and decode an image incrementaly
[0017-CP]
file = jfif444.jpg
codec = MBM
source = file
dest   = memory


//------------------
[0101-LP]
file = 
codec =

[0102-LP]
file = 
codec =

[0103-LP]
file = 
codec =

[0104-LP]
file = 
codec =

[0105-LP]
file = jfif444_8.jpg
codec = JPEG

[0106-HP]
file = jfif444_8.jpg
codec = JPEG

[0107-HP]
file = trans_1.gif
codec = BMP


[0109-HP]
file = clock.gif
codec = GIF


[0110-HP]
file = clock.gif
codec = GIF

[0111-HP]
file = clock.gif
codec = GIF

[0112-HP]
file = clock.gif
codec = GIF

[0113-CP]
file = jfif444_8.mbm
codec = BMP

[0114-HP]
file = back.gif
codec =

//------------jpeg-------
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444

Sampling =  3

//---------bmp------------
BitsPerPixel = 8

//----------mbm-------
//1 EGray2
//2 EGray4
//3 EGray16
//4 EGray256
//5 EColor16
//6 EColor256
//7 EColor64K
//8 EColor16M

displaymode = 6

[0114-HP]
file = back.gif
codec = gif
//file = 020414ao.new.jpg
//codec = jpg

[0115-HP]
file = back.gif
codec = gif

// PDEF117879: ICL unable to load MBM
// 12bpp compressed and not word aligned
[0300-HP]
file = mbm_datanewl_0300.uic
codec = // empty

------------------
[0501-CP]
file = bmp8bpp_8.mbm
codec = TIFF

[0502-LP]
file = trans_1.mbm
codec = GIF
mime = image/gif 

[0503-HP]
file = jfif444_8.jpg
//Jfif444_8_corrupt.jpg
codec = GIF

[0504-HP]
file = Jfif444_8_cropped.jpg
codec = MBM

[0505-HP]
file = NotAJpeg.jpg
codec = MBM


[0506-LP]
file = jfif444_8.jpg
codec = MBM


[0508-HP]
file = jfif444_8.jpg
codec = MBM
NumStepBeforeCancel = 7


[0509-LP]
file = 
codec =

[0510-LP]
file = jfif444_8.jpg
codec = MBM


[0511-LP]
file = jfif444_8.jpg
codec = JPEG

[0512-LP]
file = jfif444_8.mbm
codec = JPEG
QualityFactor =  50 
Sampling =  3


[0513-HP]
file = 
codec = JPEG

[0600-HP]
file = jfif444.jpg
codec = 

[0601-HP]
file = jfif444.jpg
mime = image/jpeg
codec = 

[0602-HP]
file = jfif444.drm
codec = 

[0603-HP]
file = jfif444.drm
mime = image/jpeg
codec = 

[0604-HP]
file = jfif444.drm
codec = 

[0605-HP]
file = jfif444.drm
mime = image/jpeg
codec = 

[0606-HP]
file = jfif444.drm
mime = image/jpeg
codec = 

[0607-HP]
file = drmstub.drm
mime = image/jpeg
codec = 

[0608-HP]
file = jfif444.drm
codec = 

[0609-HP]
file = jfif444.drm
codec = 
mime = image/jpeg

[0610-HP]
file = operator.drm
codec = OTA

[0611-HP]
file = operator.drm
codec = OTA
decoder = OTA

//MS3.4 File Handles API
//Read a JPEG,not specifying file type. Decode and verify JPEG.
[0701-CP]
file = jfif444.jpg
codec = JPEG

//Read a JPEG,specifying MIME type. Decode and verify JPEG.
[0702-CP]
file = jfif444.jpg
codec = JPEG
mime = image/jpeg

//Read a OTA, specifying image type. Decode and verify OTA.
[0703-CP]
file = operator.ota
codec = OTA

//Read a WBMP, specifying the Decoder UID. Decode and verify WBMP.
[0704-CP]
file = sun.wbmp
//decode = 1
codec = WBMP

//Encode an image from memory to a file, not specifying the file type.
[0705-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Encode an image from memory to a file, given the MIME Type
[0706-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
mime = image/jpeg
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Encode an image from memory to a file, given the Image Type
[0707-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Encode an image from memory to a file, given the Encoder UID.
[0708-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Alloc tests to Encode an image from memory to a file, specifying the MIME Type.
[0709-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
mime = image/jpeg
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Alloc tests to Encode an image from memory to a file, NOT specifying the MIME Type.
[0710-CP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Alloc tests to Read, decode and verify JPEG, specifying the MIME Type.
[0711-CP]
file = jfif444.jpg
codec = JPEG
mime = image/jpeg

//Alloc tests to Read, decode and verify JPEG, NOT specifying the MIME Type.
[0712-CP]
file = jfif444.jpg
codec = JPEG

//Negative tests
//Read, decode and verify JPEG, with an invalid MIME Type.
[1701-HP]
file = jfif444.jpg
codec = JPEG
mime = image/ota

//Read, decode and verify JPEG, with an invalid Image Type.
[1702-HP]
file = jfif444.jpg
codec = OTA

//Decode a file containing text data.
[1703-HP]
file = textfile.jpg
codec = JPEG

//Encode an image from bitmap to a file, specifying an invalid MIME type.
[1704-HP]
file = jfif444_8.mbm
decode = 0
codec = JPEG
mime = image/ota
source = memory
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Encode an image from bitmap to a file, specifying an invalid image type.
[1705-HP]
file = img_1705.mbm
decode = 0
codec = JPEG
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

//Encode to a jpg file containing text data.
[1706-HP]
file = textfile.mbm
decode = 0
codec = JPEG
dest   = file
//0 ..100
QualityFactor =  50 
//  --- sampling --
//	0 - EMonochrome
//	1 - EColor420
//	2 - EColor422
//	3 - EColor444
Sampling =  3

[0800-HP]
file = jfif444.jpg
codec = JPEG

[0801-HP]
file = jfif444.jpg
mime = image/jpeg
codec = JPEG

[0802-HP]
file = jfif444.jpg
codec = JPEG

[0803-HP]
file = jfif444.jpg
mime = image/jpeg
codec = JPEG

[0761-HP]
file = Image.content
mime = image/jpeg
codec = JPEG


//Added for PREQ747

[1001-CP]
file = jfif422_4.jpg
codec = JPEG

[1002-CP]
file = jfif422_4.jpg
codec = JPEG

[1003-CP]
file = jfif422_4.jpg
codec = JPEG

[1004-CP]
file = jfif422_4.jpg
codec = JPEG

------------------------

[1005-LP]
file = jfif420_2.jpg
codec = JPEG

[1006-LP]
file = jfif422_4.jpg
codec = JPEG

[1007-LP]
file = jfif422_4.jpg
codec = JPEG

[1008-HP]
file = jfif422_4.jpg
codec = JPEG

[1009-HP]
file = jfif422_4.jpg
codec = JPEG

[1010-HP]
file = jfif422_4.jpg
codec = JPEG

[1011-HP]
file = jfif422_4.jpg
codec = JPEG

---------------------------

[1111-CP]
file = jfif422_4.jpg
codec = JPEG

[1112-CP]
file = jfif422_4.jpg
codec = JPEG

[1113-CP]
file = jfif422_4.jpg
codec = JPEG

[1114-CP]
file = jfif422_4.jpg
codec = JPEG


[1117-CP]
file = jfif422_4.jpg
codec = JPEG

[1118-CP]
file = jfif422_4_Corrupt.jpg
codec = JPEG

[1119-CP]
file = jfif422_4_Corrupt.jpg
codec = JPEG

[1120-CP]
file = trans_1.gif
codec = GIF
//read, decode and verify PPM
[0612-HP]
file = preview.ppm
codec = PPM

//read, decode and verify PPM
[0613-HP]
file = preview.ppm
codec = PPM

//read, decode and verify PPM
[0614-HP]
file = preview.ppm
codec = PPM


//-----------------------
//encode an image from memory to a file
[0615-HP]
file = preview.mbm
decode = 0
codec = ppm
mime = image/x-portable-pixmap
source = memory
dest   = file
//source = bitmat
//---------mbm-
//1  EGray2
//2  EGray4
//3  EGray16
//4  Gray256
//5  EColor16
//6  EColor256
//7  EColor64K
//8  EColor16M
displaymode = 8

//-----------------------
//encode an image from memory to a file
[0616-HP]
file = preview.mbm
decode = 0
codec = ppm
mime = image/x-portable-pixmap
source = memory
dest   = file
//source = bitmat
//---------mbm-
//1  EGray2
//2  EGray4
//3  EGray16
//4  Gray256
//5  EColor16
//6  EColor256
//7  EColor64K
//8  EColor16M
displaymode = 8


//-----------------------
//encode an image from memory to a file
[0617-HP]
file = preview.mbm
decode = 0
codec = ppm
mime = image/x-portable-pixmap
source = memory
dest   = file
//source = bitmat
//---------mbm-
//1  EGray2
//2  EGray4
//3  EGray16
//4  Gray256
//5  EColor16
//6  EColor256
//7  EColor64K
//8  EColor16M
displaymode = 8

[1130-CP]
file = jfif444.jpg
mime = image/jpeg
codec = JPEG

